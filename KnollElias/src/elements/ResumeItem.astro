---
// Props: key, title, text, file, filetype
const { key, title, text, file, filetype, width, height } = Astro.props;
---

<div class="container" style=`width: 100%;`
     onMouseEnter={(event) => handleMouseEnter(event, key)} 
     onMouseLeave={(event) => handleMouseLeave(event)}
     id={'resume-item-' + key}>
  <p class="title">{title}</p>
  <div class="text-and-file" style="display: none;">
    <p class="text">{text}</p>
    {
    filetype === 'pdf' && (
      <object data={file} type="application/pdf" width={width}>PDF cannot be displayed</object>
    )
    }{
    filetype === 'jpg' && (
      <img src={file} width={width} />
    )
    }
  </div>
</div>

<script>
  let timers = {};

  function handleMouseEnter(event, key) {
    clearTimeout(timers[key]); // Clear the timer if it's already running
    const textAndFile = event.currentTarget.querySelector('.text-and-file');
    textAndFile.style.display = 'block';
  }

  function handleMouseLeave(event, key) {
    const textAndFile = event.currentTarget.querySelector('.text-and-file');
    // Set a timeout to hide the text and file after 3000ms
    timers[key] = setTimeout(() => {
      textAndFile.style.display = 'none';
    }, 3000);
  }

  document.addEventListener('DOMContentLoaded', () => {
    // Attach the event handlers to all elements with the class 'container'
    document.querySelectorAll('.container').forEach(container => {
      const key = parseInt(container.id.replace('resume-item-', ''));
      container.addEventListener('mouseenter', (event) => handleMouseEnter(event, key));
      container.addEventListener('mouseleave', (event) => handleMouseLeave(event, key));
    });
  });
</script>


<style>
  .container {
    margin: 10px;
    padding: 10px;
    border: 1px solid #fff;
    color: white;
    cursor: pointer;
  }
  .title {
    font-weight: bold;
  }
  .text {
    margin-top: 5px;
  }
  .certificate-container {
    margin-top: 10px;
  }
</style>
